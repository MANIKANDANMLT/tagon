class Blur extends HTMLElement{connectedCallback(){const t=this.getAttribute("value");this.style.filter=`blur(${t}px)`}}class Popup extends HTMLElement{connectedCallback(){const t=this.getAttribute("msg"),e=this.getAttribute("goto");this.style.cursor="pointer",this.onclick=(i=>{alert(t),window.location=e})}}class AnimateH extends HTMLElement{connectedCallback(){const t=this.getAttribute("duration"),e=this.getAttribute("animetype"),i=this.getAttribute("move"),n=this.getAttribute("loop");this.style.display="inline-block";let s=t,o=Number(s),r=e;const l=[{translate:`${i}px`}],a={duration:o,easing:r,iterations:n};this.animate(l,a)}}class AnimateV extends HTMLElement{connectedCallback(){const t=this.getAttribute("duration"),e=this.getAttribute("animetype"),i=this.getAttribute("move"),n=this.getAttribute("loop");this.style.display="inline-block";let s=t,o=Number(s),r=e;const l=[{transform:`translateY(${i}px)`}],a={duration:o,easing:r,iterations:n};this.animate(l,a)}}class Rotate extends HTMLElement{connectedCallback(){const t=this.getAttribute("duration"),e=this.getAttribute("animetype"),i=this.getAttribute("deg"),n=this.getAttribute("loop");this.style.display="inline-block";let s=t,o=Number(s),r=e;const l=[{transform:"rotate(0deg)"},{transform:`rotate(${i}deg)`}],a={duration:o,easing:r,iterations:n};this.animate(l,a)}}class RotateToStart extends HTMLElement{connectedCallback(){const t=this.getAttribute("duration"),e=this.getAttribute("animetype"),i=this.getAttribute("deg"),n=this.getAttribute("loop");this.style.display="inline-block";let s=t,o=Number(s),r=e;const l=[{transform:"rotate(0deg)"},{transform:`rotate(${i}deg)`},{transform:"rotate(0deg)"}],a={duration:o,easing:r,iterations:n};this.animate(l,a)}}class Whatsapp extends HTMLElement{connectedCallback(){const t=this.getAttribute("number"),e=this.getAttribute("msg"),i=this.getAttribute("image"),n=this.getAttribute("imgh"),s=this.getAttribute("imgw"),o=this.getAttribute("content"),r=this.getAttribute("instyle");this.innerHTML=`<a style="${r}" href="https://wa.me/${t}?text=${e}">${o}<img src="${i}" height="${n}" width="${s}"></a>`}}class Timeline extends HTMLElement{connectedCallback(){const t=this.getAttribute("info"),e=this.getAttribute("info-color"),i=this.getAttribute("info-moveh"),n=this.getAttribute("info-movev"),s=this.getAttribute("title"),o=this.getAttribute("title-color"),r=this.getAttribute("detail"),l=this.getAttribute("detail-color"),a=this.getAttribute("icon"),d=this.getAttribute("icon-color"),c=this.getAttribute("icon-height"),p=this.getAttribute("icon-width"),h=this.getAttribute("icon-radius"),g=this.getAttribute("icon-border"),m=this.getAttribute("icon-move"),u=this.getAttribute("side");this.innerHTML="left"==u?""==a?`<div style="display:flex;">\n                            <pre style="font-size:15px;color:${e};margin-top:28px;">${t} - </pre>\n                            <div>\n                            <div style="border-left:2px solid black;padding:2px;">\n                            <pre style="font-size:22px;margin-top:0;padding-top:5px;padding-left:5px;color:${o};">${s}</pre>\n                            <pre style="margin-top:-10px;padding-left:5px;color:${l};">${r}</pre>    \n                            </div>\n                        </div>`:`<div style="display:flex;">\n                            <pre style="font-size:15px;color:${e};margin-top:28px;">${t} - </pre>\n                            <div>\n                            <img src="${a}" style="background:${d};height:${c}px;width:${p}px;margin-left:${m}px;border:${g};border-radius:${h};">\n                            <div style="border-left:2px solid black;padding:2px;">\n                            <pre style="font-size:22px;margin-top:0;padding-top:5px;padding-left:5px;color:${o};">${s}</pre>\n                            <pre style="margin-top:-10px;padding-left:5px;color:${l};">${r}</pre>    \n                            </div>\n                        </div>`:""==a?`<div style="display:flex;"> \n                            <div>\n                            <div style="border-right:2px solid black;padding:2px;">\n                            <pre style="font-size:22px;margin-top:0;padding-top:5px;padding-right:5px;color:${o};text-align:right;">${s}</pre>\n                            <pre <!-- style="margin-top:-10px;padding-right:5px;color:${l};text-align:right;"-->${r}</pre>\n                            </div>\n                            </div>\n                            <pre style="font-size:15px;color:${e};margin-top:15px;"> - ${t} </pre>\n                        </div>`:`<div style="display:flex;"> \n                        \n                        <div>\n                        <img src="${a}" style="background:${d};height:${c}px;width:${p}px;translate:${m}px;border:${g};border-radius:${h}; margin-top:2px;">\n                        <div style="border-right:2px solid black;padding:2px;">\n                        <pre style="font-size:22px;margin-top:0;padding-top:5px;padding-right:5px;color:${o};text-align:right;">${s}</pre>\n                        <pre <!-- style="margin-top:-10px;padding-right:5px;color:${l};text-align:right;"-->${r}</pre>\n                        </div>\n                        </div>\n                        <pre style="font-size:15px;color:${e};margin-top:${i}px;margin-left:${n}px;"> - ${t} </pre>\n                        </div>\n                    </div>`}}class ScaleV extends HTMLElement{connectedCallback(){const t=this.getAttribute("duration"),e=this.getAttribute("animetype"),i=this.getAttribute("scale"),n=this.getAttribute("loop");this.style.display="inline-block";let s=Number(t),o=e,r=parseFloat(i);isNaN(r)&&(r=1);const l=[{transform:`scaleY(${r})`}],a={duration:s,easing:o,iterations:n};this.animate(l,a)}}class ScaleH extends HTMLElement{connectedCallback(){const t=this.getAttribute("duration"),e=this.getAttribute("animetype"),i=this.getAttribute("scale"),n=this.getAttribute("loop");this.style.display="inline-block";let s=Number(t),o=e,r=parseFloat(i);isNaN(r)&&(r=1);const l=[{transform:`scaleX(${r})`}],a={duration:s,easing:o,iterations:n};this.animate(l,a)}}class ScaleBoth extends HTMLElement{connectedCallback(){const t=this.getAttribute("duration"),e=this.getAttribute("animetype"),i=this.getAttribute("scale"),n=this.getAttribute("loop");this.style.display="inline-block";let s=Number(t),o=e,r=parseFloat(i);isNaN(r)&&(r=1);const l=[{transform:`scale(${r})`}],a={duration:s,easing:o,iterations:n};this.animate(l,a)}}class ReadJson extends HTMLElement{async connectedCallback(){const t=this.getAttribute("src");if(t)try{const e=await fetch(t);if(!e.ok)throw new Error("Network response was not ok");const i=await e.json();this.render(i)}catch(t){console.error("Error fetching or parsing JSON:",t)}else console.error("src attribute is required for <read-json> element")}render(t){const e=document.createElement("pre");e.textContent=JSON.stringify(t,null,2),this.appendChild(e)}}class ReadXml extends HTMLElement{async connectedCallback(){const t=this.getAttribute("src");if(t)try{const e=await fetch(t);if(!e.ok)throw new Error("Network response was not ok");const i=await e.text();this.render(i)}catch(t){console.error("Error fetching XML:",t)}else console.error("src attribute is required for <read-xml> element")}render(t){const e=document.createElement("pre");e.textContent=t,this.appendChild(e)}}class ReadCsv extends HTMLElement{async connectedCallback(){const t=this.getAttribute("src");if(t)try{const e=await fetch(t);if(!e.ok)throw new Error("Network response was not ok");const i=await e.text();this.render(i)}catch(t){console.error("Error fetching CSV:",t)}else console.error("src attribute is required for <read-csv> element")}render(t){const e=t.trim().split("\n").map(t=>t.split(",")),i=document.createElement("table"),n=this.getAttribute("thborder"),s=this.getAttribute("thpad"),o=this.getAttribute("thalign"),r=this.getAttribute("thbgcolor"),l=this.getAttribute("tdborder"),a=this.getAttribute("tdpad"),d=this.getAttribute("tdalign"),c=this.getAttribute("tdbgcolor");i.style.borderCollapse="collapse",i.style.width="";const p=document.createElement("tr");e[0].forEach(t=>{const e=document.createElement("th");e.textContent=t,e.style.border=n,e.style.padding=s,e.style.textAlign=o,e.style.backgroundColor=r,p.appendChild(e)}),i.appendChild(p);for(let t=1;t<e.length;t++){const n=document.createElement("tr");e[t].forEach(t=>{const e=document.createElement("td");e.textContent=t,e.style.border=l,e.style.padding=a,e.style.textAlign=d,e.style.backgroundColor=c,n.appendChild(e)}),i.appendChild(n)}this.appendChild(i)}}class NetInfo extends HTMLElement{connectedCallback(){this.style.display="none",window.addEventListener("online",this.onlineHandler.bind(this)),window.addEventListener("offline",this.offlineHandler.bind(this))}offlineHandler(){const t=this.getAttribute("styleoff");this.innerHTML=`<p style=${t}>Check your Internet Offline</p>`,this.style.display="block",this.padding="3px",setTimeout(()=>{this.style.display="none"},4e3)}onlineHandler(){const t=this.getAttribute("styleon");this.innerHTML=`<p style=${t}>Back to online</p>`,this.style.display="block",this.padding="3px",setTimeout(()=>{this.style.display="none"},4e3)}}class Goto extends HTMLElement{connectedCallback(){const t=this.getAttribute("text");this.style.display="none",this.style.position="fixed",this.style.bottom="20px",this.style.right="20px",this.style.padding="10px",this.style.cursor="pointer",this.style.textAlign="center",this.textContent=`${t}`,this.onclick=(()=>{window.scrollTo({top:0,behavior:"smooth"})}),window.onscroll=(()=>{document.body.scrollTop>20||document.documentElement.scrollTop>20?this.style.display="block":this.style.display="none"})}}class SPB extends HTMLElement{connectedCallback(){const t=document.createElement("div"),e=this.getAttribute("barcolor"),i=this.getAttribute("progresscolor"),n=this.getAttribute("barheight");t.id="progress-container",t.style.position="fixed",t.style.top="0",t.style.left="0",t.style.width="100%",t.style.height=n,t.style.backgroundColor=e,t.style.zIndex="9999";const s=document.createElement("div");s.id="progress-bar",s.style.height="100%",s.style.backgroundColor=i,s.style.width="0",t.appendChild(s),this.appendChild(t),window.addEventListener("scroll",()=>{const t=document.documentElement.scrollTop||document.body.scrollTop,e=document.documentElement.scrollHeight-document.documentElement.clientHeight,i=t/e*100;s.style.width=i+"%"})}}customElements.define("blur-it",Blur),customElements.define("text-popup",Popup),customElements.define("move-v",AnimateV),customElements.define("move-h",AnimateH),customElements.define("rotate-it",Rotate),customElements.define("rotate-tostart",RotateToStart),customElements.define("whats-app",Whatsapp),customElements.define("time-line",Timeline),customElements.define("scale-h",ScaleH),customElements.define("scale-v",ScaleV),customElements.define("scale-it",ScaleBoth),customElements.define("read-json",ReadJson),customElements.define("read-xml",ReadXml),customElements.define("read-csv",ReadCsv),customElements.define("net-info",NetInfo),customElements.define("go-up",Goto),customElements.define("scroll-progress",SPB);
